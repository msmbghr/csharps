<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backGUpdateGoods.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Col1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Col8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="timerDot.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>178, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEF642CxCpxgkQpeYKD6nRChKrXwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEHChOqpgkOpt8IDqjeCRGqoAAAqgMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACx65QggNo/0IDKD/CAyg/wgMoP8IDKD/DBKrogAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHx9/CAsRrOMIDKD/CAyg/wgMoP8IDKD/Cg6k6wAA
        zAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1AYRHsPfEh2+/wwqsf8VbNP/EUrC/wgM
        oP8IDaH/BBKuNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPIMOFFCDD/w0br/8RVMX/FmnU/woW
        pv8IDKD/CxKqsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExi6NBQgxP8UJcb/SbLv/9vl
        3P+Nwej/DC6z/wgMoP8LE62aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIewtQUIMT/GHHd/8nj
        6P/M3d//F3Ta/wgMoP8KDqTvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHcNFFCDE/xUw
        yf9tx/X/+fr3/7rW5f8RTMT/CAyg/y0lheWRWw6vkVsOr5FbDq+RWw6vkVsOr5FbDq+RWw6vHCK29xQg
        xP8hiOX/8/r9/+Tp4v8eheP/CAyg/wgPpvUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa
        uxMSHcL7FCDE/xdk2f9Dqu//H4bn/wkPpP8IDKD/YkNN/5VgEf+VYBH/lWAR/5VgEf+VYBH/lWAR/5Vg
        Ef89NIv/FCDE/xZAzv8yner/MJju/xE+wf8IDKD/ChCn0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABMfv4AUIMT/FCDE/xQgxP8UIMT/Eh2//yQilf+0gCH/sn0b/691Dv+zfyD/s30d/691
        Dv+0gCH/sn0b/5ZnK/8ZI77/FCDE/xQgxP8UIMT/FCDD/wsSq/kFFq8tAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD/ASElrHshJrL+FCDE/x4luf9ZRnP/qnIU/7N+Hv+yexn/r3UO/7N9
        Hf+yfBr/r3UO/7N+Hv+yexn/r3UO/5FkMv82M5z/FiHC/xYhwf8wLJj/c046pQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArXQKkK91Dv+kbxv/rnUP/691Dv+vdQ7/r3UO/691
        Dv+vdQ7/r3UO/691Dv+vdQ7/r3UO/691Dv+vdQ7/r3UO/6BpEP+ATxr/gE8Z/4RRE/+OWhDhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKNkAByucwz4r3UO/691Dv+3iDD/tYMm/691
        Dv+3iDD/tYMm/691Dv+3hi3/toQo/691Dv+3iDD/tYMm/691Dv+0hjP/kmQp/4RRE/+VbDb/jmEo/4ZR
        Ef6ZZgAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArHMLmK91Dv+vdQ7/r3UO/692
        EP+vdQ//r3UO/692EP+vdQ//r3UO/692D/+vdg//r3UO/692EP+vdQ//r3UO/49bFP+EURP/hFET/4VT
        Ff+EURP/hFET/5ZaEXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKx4DyKtcwz6snsZ/7F6
        F/+vdQ7/snwa/7F5Ff+vdQ7/snwa/7F5Ff+vdQ7/snsZ/7F6F/+vdQ7/snwa/7F5Ff+aZBD/ilof/4dW
        Gv+EURP/ilof/4dWGf+EURP/kFsOzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArXIMoK91
        Dv+1giT/tIAh/691Dv+1gyb/s38f/691Dv+1gyb/s38f/691Dv+1giT/tIAh/691Dv+1gyb/q3cg/4VS
        E/+QZCz/jF0j/4RRE/+QZCz/i10i/4RRE/+JVRD6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKVy
        DCitcwz8r3UO/691Dv+vdQ7/r3UO/691Dv+vdQ7/r3UO/691Dv+vdQ7/r3UO/61zDv+kbA//mmMQ/5Bb
        Ev+GUxP/hFET/4RRE/+EURP/hFET/4RRE/+EURP/hFET/4RRE/+RXBBNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAArXUNqa91Dv+vdQ7/toQp/7WCJf+vdQ7/toUr/7SBI/+qcQ//qXss/55vJf+MWBL/kWUt/49i
        Kf+EURP/kmcv/45gJ/+EURP/kmgx/45gJ/+EURP/kmgx/41fJv+EURP/hFET/5FdELYAAAAAAAAAAAAA
        AAAAAAAAAAAAAK1xCi+ucwz+r3UO/691Dv+weRT/qHIT/51mEP+WYxj/ilkW/4RRE/+HVhr/hlQX/4RR
        E/+HVhn/hlQX/4RRE/+HVhr/hlQX/4RRE/+IVxr/hlMW/4RRE/+IVxr/hlMW/4RRE/+EURP/jFcR8QAA
        AAAAAAAAAAAAAAAAAAAAAAAAqXIMtKRsD/+aYxD/kFsS/4dTE/+EURP/hFET/4RRE/+EURP/hFET/4RR
        E/+EURP/hFET/4RRE/+EURP/hFET/4RRE/+EURP/hFET/4RRE/+EURP/hFET/4RRE/+EURP/hFET/4RR
        E/+EURP/k2QGJgAAAAAAAAAAAAAAAAAAAACZZgwolWMQLpVjEC48k6+kMpzH/zKcx/8ynMf/MpzH/zKc
        x/8vmML/J4ay/yaFsP8mhbD/JoWw/y+IrMAynMf/MpzH/zGbxv8pi7b/JoWw/yaFsP9DgY+AlWMQLnNI
        E01RPR//YEEbgZVjEC6ZZgAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqk65Abqe//G6nv/xup
        7/8bqe//GKPp/w6O1f8NjNP/DYzT/w2M0/8NjNP/D5Tcshup7/8aqO7/EZTa/w2M0/8NjNP/DYzT/xGZ
        3WQAAAAAPzMfKEI1Iv8/NR9oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGqTrkBup
        7/8bqe//G6nv/xij6f8OjtX/DYzT/w2M0/8NjNP/DYzT/w2M0/8PlNyyGqju/xGU2v8NjNP/DYzT/w2M
        0/8NjNP/EZndZAAAAAA/Mx8oQzgi/2mBFql/qhJ8f6oSfH+qEnx/qhJ8facMTwAAAAAAAAAAAAAAAAAA
        AAAapOuQG6nv/xup7/8Yo+n/Do7V/w2M0/8NjNP/DYzT/w2M0/8NjNP/DYzT/w+V3bERlt7fDpDY7w6Q
        2O8OkNjvDpDY7w6Q2O8Qkd1NAAAAAEtEGyV/nwv/gZ4H/4GeB/+Bngf/gZ4H/4GeB/+Bngf/gKcNygAA
        AAAAAAAAAAAAABqk65Abqe//GKPp/w6O1f8NjNP/DYzT/w2M0/8NjNP/DYzT/w2M0/8NjNP/DpTarwAA
        AAAWqu4tFJjh0gCa4xwAAAAAAAAAAAAAAAAAAAAAfbUUSYGyF/+Bshf/gbIX/4GyF/+Bshf/gbIX/4Gy
        F/+AshXwAAAAAAAAAAAAAAAAGqTrkBij6f8OjtX/DYzT/w2M0/8NjNP/DYzT/w2M0/8NjNP/DYzT/w2M
        0/8OlNqvFqruLRmo7uoSl93/D5DW8wCa4xwAAAAAAAAAAAAAAAB/1CoGgMAi4oHBI/+BwSP/gcEj/4HB
        I/+BwSP/gcEj/3/AIZgAAAAAAAAAAAAAAAAXn+WWDY7V+wyM1f0MjNX9DIzV/QyM1f0MjNX9DIzV/QyM
        1f0MjNX9DIzV/RKa4LIZqO7qG6nv/xKX3f8NjNP/D5DW8xKg4hsAAAAAAAAAAAAAAACNqQAJf8AjVn/B
        ImB/wSJgf8EiYH/BImB9uBtBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAWqu4tGaju6hup7/8bqe//Epfd/w2M0/8NjNP/D4/W8hOc4RoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABqo7r0bqe//G6nv/xup7/8Sl93/DYzT/w2M0/8NjNP/EJTcuQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGaXlFBqp7dEbqe//G6nv/xKX3f8NjNP/DYzT/w2Q
        2dwAf/8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpPxExqn7dAbqe//Epfd/w2M
        0/8Nk9rbAH//BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpPxExmo
        7s8Sl93/EZTa2gB//wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAKnwEhSa4KAAf/8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>